str.format()
- basically like printf()
- example:
    '{0}, {1}, {2}'.format(1, 2, 3) # '1, 2, 3'
    '{}, {}, {}'.format(1, 2, 3) # same thing
    'My name is: {name}'.format(name='Ian')
    # Next line assumes a kennel class exists
    'Dogs in kennel: {0.numberOfDogs}'.format(kennel)
------------------------------------------------------------------------------

Exception creation
    class MyError(Exception):
        pass

------------------------------------------------------------------------------
# import datetime
from datetime import datetime
d = datetime(2016, 2, 4, ...)

------------------------------------------------------------------------------
Argument list and Star Magic
def func1(a, b, c):
    print(a, b, c)

def func2(a, b, c=' '):
    print(a, b, c)

func1('a', 'b', 'c')    # a b c
func2('a', 'b', 'c')    # a b c

func1(a=12, b=13, c=14) # 12 13 14
func1(b=12, c=13, a=14) # 14 12 13

------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
