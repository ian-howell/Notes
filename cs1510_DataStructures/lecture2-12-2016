DS LinkedList

template<typename T>
class LinkedList
{
private:
    T m_data;
    LinkedList* m_next;

public:
    int size() const
    {
        int counter = 0;
        const LinkedList* r = this;
        while (r->m_data != NULL)
        {
            counter++;
            r = r->m_next;
        }

        return counter;
    }

    // THIS IS WAY TOO C-LIKE
    void insert(int index, const T& newThing)
    {

        int i = 0;
        const LinkedList* r = this;
        if (index < 0)
        {
            //ERROR
        }

        while (i < index && r->m_next != NULL)
        {
            r = r->m_next;
            i++;
        }

        if (r->m_next == NULL)
        {
            //ERROR
        }
        else
        {
            newThing->m_next = r->m_next;
            r->m_next = &newThing;
        }
    }
